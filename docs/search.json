[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 birdnetR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/birdnetr.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Get started with BirdNET-R","text":"First, install reticulate package haven’t already: now, install package GitHub. install package directly GitHub, need devtools package installed. don’t devtools installed, can install using: , can install birdnetR GitHub: Next, install birdnet, set Python virtual environment named r-birdnet default. can configure envname parameter. initial setup encounter issues environment. [!NOTE] don’t compatible version Python installed, use reticulate::use_python_version(version = ‘’) install compatible version.","code":"install.packages(\"reticulate\") install.packages(\"devtools\") devtools::install_github(\"birdnet-team/BirdNET-R\") library(birdnetR) install_birdnet()"},{"path":[]},{"path":"/articles/birdnetr.html","id":"identify-species-in-an-audio-file","dir":"Articles","previous_headings":"Usage","what":"Identify species in an audio file","title":"Get started with BirdNET-R","text":"Using BirdNET, can identify bird species within audio file. function returns predictions every 3-second snippet file exceed specified min_confidence threshold. row resulting data frame represents single prediction specific 3-second interval. multiple predictions confidence threshold within time interval, see multiple rows interval. filter keep probable prediction per interval, can use convenience function provided package.","code":"# Load the package library(birdnetR)  # Initialize the BirdNET model model <- init_model()  # Path to the exemplary audio file (replace with your own file path) audio_path <- system.file(\"extdata\", \"soundscape.wav\", package = \"birdnetR\")  # Predict species within the audio file predictions <- predict_species(model, audio_path, min_confidence = 0.3, keep_empty = TRUE)  predictions #>    start end      scientific_name            common_name confidence #> 1      0   3 Poecile atricapillus Black-capped Chickadee  0.8140560 #> 2      3   6 Poecile atricapillus Black-capped Chickadee  0.3082846 #> 3      6   9                   NA                     NA         NA #> 4      9  12 Haemorhous mexicanus            House Finch  0.6393773 #> 5     12  15                   NA                     NA         NA #> 6     15  18                   NA                     NA         NA #> 7     18  21  Cyanocitta cristata               Blue Jay  0.4352714 #> 8     18  21  Clamator coromandus Chestnut-winged Cuckoo  0.3225878 #> 9     21  24  Cyanocitta cristata               Blue Jay  0.3290862 #> 10    24  27                   NA                     NA         NA #> 11    27  30                   NA                     NA         NA #> 12    30  33                   NA                     NA         NA #> 13    33  36       Junco hyemalis        Dark-eyed Junco  0.4590627 #> 14    36  39       Junco hyemalis        Dark-eyed Junco  0.3536843 #> 15    39  42                   NA                     NA         NA #> 16    42  45       Junco hyemalis        Dark-eyed Junco  0.7375432 #> 17    45  48                   NA                     NA         NA #> 18    48  51                   NA                     NA         NA #> 19    51  54                   NA                     NA         NA #> 20    54  57 Haemorhous mexicanus            House Finch  0.6070659 #> 21    57  60                   NA                     NA         NA #> 22    60  63       Junco hyemalis        Dark-eyed Junco  0.5549893 #> 23    63  66                   NA                     NA         NA #> 24    66  69                   NA                     NA         NA #> 25    69  72                   NA                     NA         NA #> 26    72  75 Haemorhous mexicanus            House Finch  0.5638493 #> 27    75  78                   NA                     NA         NA #> 28    78  81                   NA                     NA         NA #> 29    81  84                   NA                     NA         NA #> 30    84  87                   NA                     NA         NA #> 31    87  90                   NA                     NA         NA #> 32    90  93       Spinus tristis     American Goldfinch  0.4190337 #> 33    93  96 Haemorhous mexicanus            House Finch  0.3168353 #> 34    96  99       Spinus tristis     American Goldfinch  0.4765152 #> 35    99 102                   NA                     NA         NA #> 36   102 105 Haemorhous mexicanus            House Finch  0.4458926 #> 37   105 108                   NA                     NA         NA #> 38   108 111                   NA                     NA         NA #> 39   111 114               Engine                 Engine  0.5168386 #> 40   114 117                   NA                     NA         NA #> 41   117 120       Spinus tristis     American Goldfinch  0.3923944 top_predictions <- get_top_prediction(predictions) top_predictions #>    start end      scientific_name            common_name confidence #> 1      0   3 Poecile atricapillus Black-capped Chickadee  0.8140560 #> 2      3   6 Poecile atricapillus Black-capped Chickadee  0.3082846 #> 3      9  12 Haemorhous mexicanus            House Finch  0.6393773 #> 4     18  21  Cyanocitta cristata               Blue Jay  0.4352714 #> 5     21  24  Cyanocitta cristata               Blue Jay  0.3290862 #> 6     33  36       Junco hyemalis        Dark-eyed Junco  0.4590627 #> 7     36  39       Junco hyemalis        Dark-eyed Junco  0.3536843 #> 8     42  45       Junco hyemalis        Dark-eyed Junco  0.7375432 #> 9     54  57 Haemorhous mexicanus            House Finch  0.6070659 #> 10    60  63       Junco hyemalis        Dark-eyed Junco  0.5549893 #> 11    72  75 Haemorhous mexicanus            House Finch  0.5638493 #> 12    90  93       Spinus tristis     American Goldfinch  0.4190337 #> 13    93  96 Haemorhous mexicanus            House Finch  0.3168353 #> 14    96  99       Spinus tristis     American Goldfinch  0.4765152 #> 15   102 105 Haemorhous mexicanus            House Finch  0.4458926 #> 16   111 114               Engine                 Engine  0.5168386 #> 17   117 120       Spinus tristis     American Goldfinch  0.3923944"},{"path":"/articles/birdnetr.html","id":"using-a-custom-species-list","dir":"Articles","previous_headings":"Usage","what":"Using a custom species list","title":"Get started with BirdNET-R","text":"may always need identify 6,000+ species available model. focus species relevant project, can use custom species list containing necessary class labels. Class labels follow specific format, consisting scientific name common name, separated underscore, like : create custom species list, ensure class label separate line .txt file. can refer example included package check full list species BirdNET trained .","code":"\"Accipiter cooperii_Cooper's Hawk\" \"Agelaius phoeniceus_Red-winged Blackbird\" # Path to the label file including all BirdNET classes # use this file as a template to create your custom species list but don't change it.  get_labels_path(language = \"en_us\")  # Path to the example custom species list with a reduced number of class system.file(\"extdata\", \"species_list.txt\", package = \"birdnetR\") # read in your custom species list species_list_file <- system.file(\"extdata\", \"species_list.txt\", package = \"birdnetR\") custom_species_list <- get_species_from_file(species_list_file)  # Predict using the provided class labels only predict_species(model, audio_path, filter_species = custom_species_list, min_confidence = 0.3, keep_empty = FALSE) #>    start end      scientific_name            common_name confidence #> 1      0   3 Poecile atricapillus Black-capped Chickadee  0.8140560 #> 2      3   6 Poecile atricapillus Black-capped Chickadee  0.3082846 #> 3      9  12 Haemorhous mexicanus            House Finch  0.6393773 #> 4     18  21  Cyanocitta cristata               Blue Jay  0.4352714 #> 5     21  24  Cyanocitta cristata               Blue Jay  0.3290862 #> 6     33  36       Junco hyemalis        Dark-eyed Junco  0.4590627 #> 7     36  39       Junco hyemalis        Dark-eyed Junco  0.3536843 #> 8     42  45       Junco hyemalis        Dark-eyed Junco  0.7375432 #> 9     54  57 Haemorhous mexicanus            House Finch  0.6070659 #> 10    60  63       Junco hyemalis        Dark-eyed Junco  0.5549893 #> 11    72  75 Haemorhous mexicanus            House Finch  0.5638493 #> 12    90  93       Spinus tristis     American Goldfinch  0.4190337 #> 13    93  96 Haemorhous mexicanus            House Finch  0.3168353 #> 14    96  99       Spinus tristis     American Goldfinch  0.4765152 #> 15   102 105 Haemorhous mexicanus            House Finch  0.4458926 #> 16   117 120       Spinus tristis     American Goldfinch  0.3923944   # It is the same to supply a vector of class labels predict_species(model, audio_path, filter_species = c(\"Cyanocitta cristata_Blue Jay\", \"Junco hyemalis_Dark-eyed Junco\"), min_confidence = 0.3, keep_empty = FALSE) #>   start end     scientific_name     common_name confidence #> 1    18  21 Cyanocitta cristata        Blue Jay  0.4352714 #> 2    21  24 Cyanocitta cristata        Blue Jay  0.3290862 #> 3    33  36      Junco hyemalis Dark-eyed Junco  0.4590627 #> 4    36  39      Junco hyemalis Dark-eyed Junco  0.3536843 #> 5    42  45      Junco hyemalis Dark-eyed Junco  0.7375432 #> 6    60  63      Junco hyemalis Dark-eyed Junco  0.5549893"},{"path":"/articles/birdnetr.html","id":"predict-species-occurence-with-the-meta-model","dir":"Articles","previous_headings":"Usage","what":"Predict species occurence with the Meta Model","title":"Get started with BirdNET-R","text":"BirdNET includes Meta Model can predict occurrence bird species specific location time year. function returns data frame containing class labels corresponding confidence values, indicate likelihood species presence. labels can used create custom species list analysis. detailed information, refer help file: ?predict_species_at_location_and_time.","code":"# predict species occurrence in Ithaca, NY predicted_species <- predict_species_at_location_and_time(model, latitude = 42.5, longitude = -76.45, week = 4) predicted_species #>                                            label confidence #> 1                   Cyanocitta cristata_Blue Jay 0.92761987 #> 2    Poecile atricapillus_Black-capped Chickadee 0.89634502 #> 3     Sitta carolinensis_White-breasted Nuthatch 0.83386248 #> 4        Cardinalis cardinalis_Northern Cardinal 0.83384001 #> 5                 Junco hyemalis_Dark-eyed Junco 0.82892436 #> 6                 Zenaida macroura_Mourning Dove 0.80856085 #> 7            Corvus brachyrhynchos_American Crow 0.80613393 #> 8           Dryobates pubescens_Downy Woodpecker 0.79824126 #> 9              Spinus tristis_American Goldfinch 0.72842169 #> 10            Baeolophus bicolor_Tufted Titmouse 0.64461637 #> 11   Melanerpes carolinus_Red-bellied Woodpecker 0.57117057 #> 12            Sturnus vulgaris_European Starling 0.53358513 #> 13                Branta canadensis_Canada Goose 0.49447596 #> 14               Passer domesticus_House Sparrow 0.46555308 #> 15           Dryobates villosus_Hairy Woodpecker 0.45390621 #> 16                    Anas platyrhynchos_Mallard 0.45113835 #> 17    Spizelloides arborea_American Tree Sparrow 0.40686846 #> 18              Haemorhous mexicanus_House Finch 0.39645392 #> 19             Buteo jamaicensis_Red-tailed Hawk 0.30942076 #> 20                     Columba livia_Rock Pigeon 0.25977108 #> 21             Mergus merganser_Common Merganser 0.22970919 #> 22           Haliaeetus leucocephalus_Bald Eagle 0.22791295 #> 23           Larus delawarensis_Ring-billed Gull 0.22191359 #> 24                 Larus argentatus_Herring Gull 0.21182366 #> 25        Sitta canadensis_Red-breasted Nuthatch 0.21049574 #> 26             Turdus migratorius_American Robin 0.20733745 #> 27                Melospiza melodia_Song Sparrow 0.20199366 #> 28           Bucephala clangula_Common Goldeneye 0.17795457 #> 29 Zonotrichia albicollis_White-throated Sparrow 0.16203727 #> 30        Thryothorus ludovicianus_Carolina Wren 0.15796915 #> 31                  Bucephala albeola_Bufflehead 0.15064351 #> 32        Dryocopus pileatus_Pileated Woodpecker 0.14473046 #> 33                     Corvus corax_Common Raven 0.14393221 #> 34        Lophodytes cucullatus_Hooded Merganser 0.13820682 #> 35               Meleagris gallopavo_Wild Turkey 0.11249744 #> 36             Anas rubripes_American Black Duck 0.11206380 #> 37                         Cygnus olor_Mute Swan 0.10713173 #> 38        Mergus serrator_Red-breasted Merganser 0.10685672 #> 39                Sialia sialis_Eastern Bluebird 0.10205001 #> 40      Agelaius phoeniceus_Red-winged Blackbird 0.10190699 #> 41               Certhia americana_Brown Creeper 0.09244619 #> 42                      Spinus pinus_Pine Siskin 0.08858253 #> 43              Eremophila alpestris_Horned Lark 0.08667617 #> 44              Accipiter cooperii_Cooper's Hawk 0.08358976 #> 45            Clangula hyemalis_Long-tailed Duck 0.07832219 #> 46        Mimus polyglottos_Northern Mockingbird 0.07147934 #> 47        Regulus satrapa_Golden-crowned Kinglet 0.06975750 #> 48             Haemorhous purpureus_Purple Finch 0.06913085 #> 49             Colaptes auratus_Northern Flicker 0.06526724 #> 50           Megaceryle alcyon_Belted Kingfisher 0.06311856 #> 51               Ardea herodias_Great Blue Heron 0.06250057 #> 52             Bombycilla cedrorum_Cedar Waxwing 0.05882844 #> 53             Falco sparverius_American Kestrel 0.05631926 #> 54                   Aythya marila_Greater Scaup 0.05369161 #> 55              Aythya collaris_Ring-necked Duck 0.05146080 #> 56                       Gavia immer_Common Loon 0.05116586 #> 57                 Podiceps auritus_Horned Grebe 0.04692902 #> 58             Quiscalus quiscula_Common Grackle 0.04545517 #> 59  Zonotrichia leucophrys_White-crowned Sparrow 0.04321175 #> 60            Plectrophenax nivalis_Snow Bunting 0.04216966 #> 61               Acanthis flammea_Common Redpoll 0.04189433 #> 62               Buteo lagopus_Rough-legged Hawk 0.03867114 #> 63             Circus hudsonius_Northern Harrier 0.03567082 #> 64         Larus marinus_Great Black-backed Gull 0.03500110  # Predict using the predicted class labels only predict_species(model, audio_path, filter_species = predicted_species$label, min_confidence = 0.3, keep_empty = FALSE) #>    start end      scientific_name            common_name confidence #> 1      0   3 Poecile atricapillus Black-capped Chickadee  0.8140560 #> 2      3   6 Poecile atricapillus Black-capped Chickadee  0.3082846 #> 3      9  12 Haemorhous mexicanus            House Finch  0.6393773 #> 4     18  21  Cyanocitta cristata               Blue Jay  0.4352714 #> 5     21  24  Cyanocitta cristata               Blue Jay  0.3290862 #> 6     33  36       Junco hyemalis        Dark-eyed Junco  0.4590627 #> 7     36  39       Junco hyemalis        Dark-eyed Junco  0.3536843 #> 8     42  45       Junco hyemalis        Dark-eyed Junco  0.7375432 #> 9     54  57 Haemorhous mexicanus            House Finch  0.6070659 #> 10    60  63       Junco hyemalis        Dark-eyed Junco  0.5549893 #> 11    72  75 Haemorhous mexicanus            House Finch  0.5638493 #> 12    90  93       Spinus tristis     American Goldfinch  0.4190337 #> 13    93  96 Haemorhous mexicanus            House Finch  0.3168353 #> 14    96  99       Spinus tristis     American Goldfinch  0.4765152 #> 15   102 105 Haemorhous mexicanus            House Finch  0.4458926 #> 16   117 120       Spinus tristis     American Goldfinch  0.3923944"},{"path":"/articles/birdnetr.html","id":"translating-common-species-names","dir":"Articles","previous_headings":"Usage","what":"Translating Common Species Names","title":"Get started with BirdNET-R","text":"birdnetR package allows translate common bird species names several different languages. check languages supported, can use following command: output common names preferred language, initialize model language parameter set desired language code: want view class labels specific language, can retrieve inspect using commands:","code":"available_languages() #>  [1] \"af\"    \"ar\"    \"cs\"    \"da\"    \"de\"    \"en_uk\" \"en_us\" \"es\"    \"fi\"    #> [10] \"fr\"    \"hu\"    \"it\"    \"ja\"    \"ko\"    \"nl\"    \"no\"    \"pl\"    \"pt\"    #> [19] \"ro\"    \"ru\"    \"sk\"    \"sl\"    \"sv\"    \"th\"    \"tr\"    \"uk\"    \"zh\" model <- init_model(language = \"fr\") labels_path_lang <- get_labels_path(language = \"fr\") labels_lang <- get_species_from_file(labels_path_lang)  head(labels_lang) #> [1] \"Abroscopus albogularis_Bouscarle à moustaches\"        #> [2] \"Abroscopus schisticeps_Bouscarle à face noire\"        #> [3] \"Abroscopus superciliaris_Bouscarle à sourcils blancs\" #> [4] \"Aburria aburri_Pénélope aburri\"                       #> [5] \"Acanthagenys rufogularis_Méliphage à bavette\"         #> [6] \"Acanthidops bairdi_Bec-en-cheville gris\""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stefan Kahl. Author, maintainer. BirdNET Team. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kahl S, Team B (2024). birdnetR: Identifying bird species sounds. R package version 0.1.0.","code":"@Manual{,   title = {birdnetR: Identifying bird species by their sounds},   author = {Stefan Kahl and BirdNET Team},   year = {2024},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"birdnet-r","dir":"","previous_headings":"","what":"Identifying bird species by their sounds","title":"Identifying bird species by their sounds","text":"wrapper birdnet Python package automated bird sound ID available ","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Identifying bird species by their sounds","text":"Feel free use BirdNET-R acoustic analyses research. , please cite :","code":"@article{kahl2021birdnet,   title={BirdNET: A deep learning solution for avian diversity monitoring},   author={Kahl, Stefan and Wood, Connor M and Eibl, Maximilian and Klinck, Holger},   journal={Ecological Informatics},   volume={61},   pages={101236},   year={2021},   publisher={Elsevier} }"},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Identifying bird species by their sounds","text":"Source Code: source code project licensed MIT License. Models: models used project licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC -NC-SA 4.0). Please ensure review adhere specific license terms provided model. Note educational research purposes considered non-commercial use cases.","code":""},{"path":"/index.html","id":"setup","dir":"","previous_headings":"","what":"Setup","title":"Identifying bird species by their sounds","text":"First, install reticulate package haven’t already: now, install package GitHub. install package directly GitHub, need devtools package installed. don’t devtools installed, can install using: , can install BirdNET-R GitHub: Next, install birdnet, set Python virtual environment named r-birdnet default. can configure envname parameter. initial setup encounter issues environment. [!NOTE] don’t compatible version Python installed, use reticulate::use_python_version(version = ‘’) install compatible version.","code":"install.packages(\"reticulate\") install.packages(\"devtools\") devtools::install_github(\"birdnet-team/BirdNET-R\") library(birdnetR) install_birdnet()"},{"path":"/index.html","id":"example-use","dir":"","previous_headings":"","what":"Example use","title":"Identifying bird species by their sounds","text":"’s simple example use package predict bird species audio file:","code":"# Load the package library(birdnetR)  # Initialize the BirdNET model model <- init_model()  # Path to the audio file (replace with your own file path) audio_path <- \"path/to/your/soundscape.wav\"  # Predict species within the audio file predictions <- predict_species(model, audio_path)  # Get most probable prediction within each time interval get_top_prediction(predictions)"},{"path":[]},{"path":"/index.html","id":"cloning-the-repository","dir":"","previous_headings":"Developer Guide","what":"Cloning the Repository","title":"Identifying bird species by their sounds","text":"contribute development BirdNET-R, can clone repository GitHub:","code":"git clone https://github.com/birdnet-team/BirdNET-R.git cd BirdNET-R"},{"path":"/index.html","id":"setting-up-the-development-environment","dir":"","previous_headings":"Developer Guide","what":"Setting Up the Development Environment","title":"Identifying bird species by their sounds","text":"Install R Package Dependencies Ensure necessary R package dependencies: Setting Python Environment Set Python virtual environment install birdnet Python package described . Generating Documentation generate documentation, use roxygen2 package: Running Tests run tests, use testthat package: Building checking Package build check package, use devtools package: [!NOTE] Tests checks pass package birdnet installed correctly.","code":"install.packages(c(\"devtools\", \"roxygen2\", \"testthat\", \"reticulate\")) devtools::document() devtools::test() devtools::build() devtools::check()"},{"path":"/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Identifying bird species by their sounds","text":"project supported Jake Holshuh (Cornell class ’69) Arthur Vining Davis Foundations. work K. Lisa Yang Center Conservation Bioacoustics made possible generosity K. Lisa Yang advance innovative conservation technologies inspire inform conservation wildlife habitats. German Federal Ministry Education Research funding development BirdNET project “BirdNET+” (FKZ 01|S22072). Additionally, German Federal Ministry Environment, Nature Conservation Nuclear Safety funding development BirdNET project “DeepBirdDetect” (FKZ 67KI31040E).","code":""},{"path":"/index.html","id":"partners","dir":"","previous_headings":"","what":"Partners","title":"Identifying bird species by their sounds","text":"BirdNET joint effort partners academia industry. Without partnerships, project possible. Thank !","code":""},{"path":"/reference/available_languages.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Available Languages for BirdNET Model — available_languages","title":"Get Available Languages for BirdNET Model — available_languages","text":"Retrieve available languages supported BirdNET model.","code":""},{"path":"/reference/available_languages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Available Languages for BirdNET Model — available_languages","text":"","code":"available_languages()"},{"path":"/reference/available_languages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Available Languages for BirdNET Model — available_languages","text":"sorted character vector containing available language codes.","code":""},{"path":"/reference/available_languages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Available Languages for BirdNET Model — available_languages","text":"","code":"available_languages() #>  [1] \"af\"    \"ar\"    \"cs\"    \"da\"    \"de\"    \"en_uk\" \"en_us\" \"es\"    \"fi\"    #> [10] \"fr\"    \"hu\"    \"it\"    \"ja\"    \"ko\"    \"nl\"    \"no\"    \"pl\"    \"pt\"    #> [19] \"ro\"    \"ru\"    \"sk\"    \"sl\"    \"sv\"    \"th\"    \"tr\"    \"uk\"    \"zh\""},{"path":"/reference/birdnetR.html","id":null,"dir":"Reference","previous_headings":"","what":"BirdNET for R — birdnetR","title":"BirdNET for R — birdnetR","text":"birdnetR wrapper around python package birdnet.","code":""},{"path":"/reference/birdnetR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BirdNET for R — birdnetR","text":"Maintainer: Stefan Kahl stefan.kahl@cornell.edu Authors: BirdNET Team","code":""},{"path":"/reference/get_labels_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Path to BirdNET Labels File for a Specified Language — get_labels_path","title":"Get Path to BirdNET Labels File for a Specified Language — get_labels_path","text":"function retrieves file path BirdNET labels file system corresponding specified language. file contains class labels supported BirdNET model.","code":""},{"path":"/reference/get_labels_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Path to BirdNET Labels File for a Specified Language — get_labels_path","text":"","code":"get_labels_path(language)"},{"path":"/reference/get_labels_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Path to BirdNET Labels File for a Specified Language — get_labels_path","text":"language character string specifying language code labels path requested. language must one available languages supported BirdNET model.","code":""},{"path":"/reference/get_labels_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Path to BirdNET Labels File for a Specified Language — get_labels_path","text":"character string representing file path labels file specified language.","code":""},{"path":"/reference/get_labels_path.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get Path to BirdNET Labels File for a Specified Language — get_labels_path","text":"language parameter must one available languages returned available_languages().","code":""},{"path":[]},{"path":"/reference/get_labels_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Path to BirdNET Labels File for a Specified Language — get_labels_path","text":"","code":"get_labels_path(\"en_us\") #> [1] \"/home/fegue/.local/share/birdnet/models/v2.4/labels/en_us.txt\""},{"path":"/reference/get_species_from_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read species labels from a file — get_species_from_file","title":"Read species labels from a file — get_species_from_file","text":"convenience function read species labels file.","code":""},{"path":"/reference/get_species_from_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read species labels from a file — get_species_from_file","text":"","code":"get_species_from_file(species_file)"},{"path":"/reference/get_species_from_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read species labels from a file — get_species_from_file","text":"species_file Path species file.","code":""},{"path":"/reference/get_species_from_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read species labels from a file — get_species_from_file","text":"vector class labels e.g. c(\"Cyanocitta cristata_Blue Jay\", \"Zenaida macroura_Mourning Dove\")","code":""},{"path":[]},{"path":"/reference/get_species_from_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read species labels from a file — get_species_from_file","text":"","code":"# Read a custom species file get_species_from_file(system.file(\"extdata\", \"species_list.txt\", package = \"birdnetR\")) #>  [1] \"Accipiter cooperii_Cooper's Hawk\"              #>  [2] \"Agelaius phoeniceus_Red-winged Blackbird\"      #>  [3] \"Anas platyrhynchos_Mallard\"                    #>  [4] \"Anas rubripes_American Black Duck\"             #>  [5] \"Ardea herodias_Great Blue Heron\"               #>  [6] \"Baeolophus bicolor_Tufted Titmouse\"            #>  [7] \"Branta canadensis_Canada Goose\"                #>  [8] \"Bucephala albeola_Bufflehead\"                  #>  [9] \"Bucephala clangula_Common Goldeneye\"           #> [10] \"Buteo jamaicensis_Red-tailed Hawk\"             #> [11] \"Cardinalis cardinalis_Northern Cardinal\"       #> [12] \"Certhia americana_Brown Creeper\"               #> [13] \"Colaptes auratus_Northern Flicker\"             #> [14] \"Columba livia_Rock Pigeon\"                     #> [15] \"Corvus brachyrhynchos_American Crow\"           #> [16] \"Corvus corax_Common Raven\"                     #> [17] \"Cyanocitta cristata_Blue Jay\"                  #> [18] \"Cygnus olor_Mute Swan\"                         #> [19] \"Dryobates pubescens_Downy Woodpecker\"          #> [20] \"Dryobates villosus_Hairy Woodpecker\"           #> [21] \"Dryocopus pileatus_Pileated Woodpecker\"        #> [22] \"Eremophila alpestris_Horned Lark\"              #> [23] \"Haemorhous mexicanus_House Finch\"              #> [24] \"Haemorhous purpureus_Purple Finch\"             #> [25] \"Haliaeetus leucocephalus_Bald Eagle\"           #> [26] \"Junco hyemalis_Dark-eyed Junco\"                #> [27] \"Larus argentatus_Herring Gull\"                 #> [28] \"Larus delawarensis_Ring-billed Gull\"           #> [29] \"Lophodytes cucullatus_Hooded Merganser\"        #> [30] \"Melanerpes carolinus_Red-bellied Woodpecker\"   #> [31] \"Meleagris gallopavo_Wild Turkey\"               #> [32] \"Melospiza melodia_Song Sparrow\"                #> [33] \"Mergus merganser_Common Merganser\"             #> [34] \"Mergus serrator_Red-breasted Merganser\"        #> [35] \"Passer domesticus_House Sparrow\"               #> [36] \"Poecile atricapillus_Black-capped Chickadee\"   #> [37] \"Regulus satrapa_Golden-crowned Kinglet\"        #> [38] \"Sialia sialis_Eastern Bluebird\"                #> [39] \"Sitta canadensis_Red-breasted Nuthatch\"        #> [40] \"Sitta carolinensis_White-breasted Nuthatch\"    #> [41] \"Spinus pinus_Pine Siskin\"                      #> [42] \"Spinus tristis_American Goldfinch\"             #> [43] \"Spizelloides arborea_American Tree Sparrow\"    #> [44] \"Sturnus vulgaris_European Starling\"            #> [45] \"Thryothorus ludovicianus_Carolina Wren\"        #> [46] \"Turdus migratorius_American Robin\"             #> [47] \"Zenaida macroura_Mourning Dove\"                #> [48] \"Zonotrichia albicollis_White-throated Sparrow\"  # To access all class labels that are supported in your language, # you can read in the respective label file labels_path <- get_labels_path(\"fr\") species_list <- get_species_from_file(labels_path) head(species_list) #> [1] \"Abroscopus albogularis_Bouscarle à moustaches\"        #> [2] \"Abroscopus schisticeps_Bouscarle à face noire\"        #> [3] \"Abroscopus superciliaris_Bouscarle à sourcils blancs\" #> [4] \"Aburria aburri_Pénélope aburri\"                       #> [5] \"Acanthagenys rufogularis_Méliphage à bavette\"         #> [6] \"Acanthidops bairdi_Bec-en-cheville gris\""},{"path":"/reference/get_top_prediction.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the top prediction by confidence within time intervals — get_top_prediction","title":"Get the top prediction by confidence within time intervals — get_top_prediction","text":"convenience function retrieves row(s) highest confidence value within time interval. can also limit results specific time interval specified.","code":""},{"path":"/reference/get_top_prediction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the top prediction by confidence within time intervals — get_top_prediction","text":"","code":"get_top_prediction(data, filter = NULL)"},{"path":"/reference/get_top_prediction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the top prediction by confidence within time intervals — get_top_prediction","text":"data data frame columns 'start', 'end', 'scientific_name', 'common_name', 'confidence'. data frame typically output predictions_to_df. filter list containing 'start' 'end' values filter data calculation. NULL, function processes time intervals.","code":""},{"path":"/reference/get_top_prediction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the top prediction by confidence within time intervals — get_top_prediction","text":"data frame containing rows highest confidence per group specified interval.","code":""},{"path":"/reference/get_top_prediction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the top prediction by confidence within time intervals — get_top_prediction","text":"","code":"if (FALSE) { # interactive() # Example data data <- data.frame(   start = c(0, 0, 1, 1, 2, 2),   end = c(1, 1, 2, 2, 3, 3),   scientific_name = c(     \"Species A\",     \"Species B\",     \"Species A\",     \"Species B\",     \"Species A\",     \"Species B\"   ),   common_name = c(     \"Common A\",     \"Common B\",     \"Common A\",     \"Common B\",     \"Common A\",     \"Common B\"   ),   confidence = c(0.1, 0.2, 0.5, 0.3, 0.7, 0.8) ) data  # Get top prediction for each time interval get_top_prediction(data)  # Get top prediction for a specific time interval get_top_prediction(data, filter = list(start = 1, end = 2))  # The same thing can be done using dplyr # data |> #    dplyr::group_by(start, end) |> #    dplyr::slice_max(order_by = confidence) }"},{"path":"/reference/init_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize the BirdNET Model — init_model","title":"Initialize the BirdNET Model — init_model","text":"function initializes BirdNET model (v2.4).","code":""},{"path":"/reference/init_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize the BirdNET Model — init_model","text":"","code":"init_model(tflite_num_threads = NULL, language = \"en_us\")"},{"path":"/reference/init_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize the BirdNET Model — init_model","text":"tflite_num_threads integer. number threads use TensorFlow Lite operations. NULL (default), default threading behavior used. coerced integer possible. language character string specifying language code use model's text processing. language must one available languages supported BirdNET model.","code":""},{"path":"/reference/init_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize the BirdNET Model — init_model","text":"instance BirdNET model.","code":""},{"path":"/reference/init_model.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Initialize the BirdNET Model — init_model","text":"language parameter must one available languages returned available_languages().","code":""},{"path":[]},{"path":"/reference/install_birdnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Install BirdNET and its dependencies — install_birdnet","title":"Install BirdNET and its dependencies — install_birdnet","text":"install_birdnet() installs python package birdnet PyPi virtual environment.","code":""},{"path":"/reference/install_birdnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install BirdNET and its dependencies — install_birdnet","text":"","code":"install_birdnet(   ...,   envname = \"r-birdnet\",   new_env = identical(envname, \"r-birdnet\") )"},{"path":"/reference/install_birdnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install BirdNET and its dependencies — install_birdnet","text":"... arguments passed reticulate::py_install() envname Name virtual environment. Defaults 'r-birdnet'. new_env TRUE, existing Python virtual environment specified envname deleted first.","code":""},{"path":"/reference/is_valid_species_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object is a Valid Species List — is_valid_species_list","title":"Check if an Object is a Valid Species List — is_valid_species_list","text":"internal function checks object either character vector length greater 0 list element single non-empty character string.","code":""},{"path":"/reference/is_valid_species_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object is a Valid Species List — is_valid_species_list","text":"","code":"is_valid_species_list(obj)"},{"path":"/reference/is_valid_species_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object is a Valid Species List — is_valid_species_list","text":"obj object check. can either character vector list.","code":""},{"path":"/reference/is_valid_species_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an Object is a Valid Species List — is_valid_species_list","text":"logical value indicating whether object valid species list: TRUE object character vector length > 0 list element single character string. FALSE otherwise.","code":""},{"path":"/reference/is_valid_species_list.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check if an Object is a Valid Species List — is_valid_species_list","text":"function intended internal use may exported accessible external users.","code":""},{"path":"/reference/is_valid_species_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if an Object is a Valid Species List — is_valid_species_list","text":"","code":"if (FALSE) { # \\dontrun{ is_valid_species_list(c(\"species1\", \"species2\")) # TRUE is_valid_species_list(list(\"species1\", \"species2\")) # TRUE is_valid_species_list(c(1, 2, 3)) # FALSE is_valid_species_list(list(a = 1, b = 2)) # FALSE } # }"},{"path":"/reference/predict_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Species Within an Audio File — predict_species","title":"Predict Species Within an Audio File — predict_species","text":"function predicts species within audio file using BirdNET model.","code":""},{"path":"/reference/predict_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Species Within an Audio File — predict_species","text":"","code":"predict_species(   model,   audio_file = system.file(\"extdata\", \"soundscape.wav\", package = \"birdnetR\"),   min_confidence = 0.1,   batch_size = 1L,   use_bandpass = TRUE,   bandpass_fmin = 0L,   bandpass_fmax = 15000L,   apply_sigmoid = TRUE,   sigmoid_sensitivity = 1,   filter_species = NULL,   file_splitting_duration_s = 600,   keep_empty = TRUE )"},{"path":"/reference/predict_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Species Within an Audio File — predict_species","text":"model BirdNETModel. instance BirdNET model returned init_model(). audio_file character. path audio file. min_confidence numeric. Minimum confidence threshold predictions. batch_size integer. Number audio samples process batch. use_bandpass logical. Whether apply bandpass filter. bandpass_fmin, bandpass_fmax numeric. Minimum/Maximum frequency bandpass filter (Hz). Ignored use_bandpass False. apply_sigmoid logical. Whether apply sigmoid function model output. sigmoid_sensitivity numeric. Sensitivity parameter sigmoid function. Must interval 0.5 - 1.5. Ignored apply_sigmoid False. filter_species NULL, character vector length greater 0 list element single non-empty character string. Used filter predictions. NULL, filtering applied. See get_species_from_file() details. file_splitting_duration_s numeric. Duration seconds splitting audio file smaller segments processing. keep_empty logical. Whether include empty intervals output.","code":""},{"path":"/reference/predict_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Species Within an Audio File — predict_species","text":"data frame columns: start, end, scientific_name, common_name, confidence. row represents single prediction.","code":""},{"path":"/reference/predict_species.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict Species Within an Audio File — predict_species","text":"Applying sigmoid activation function, (apply_sigmoid=True) scales unbound class output linear classifier (\"logit score\") range 0-1. confidence score unitless, numeric expression BirdNET’s “confidence” prediction (probability species presence). Sigmoid sensitivity < 1 leads higher lower scoring predictions value > 1 leads intermediate-scoring predictions. information BirdNET confidence scores, sigmoid activation function suggested workflow convert confidence scores probabilities, see Wood & Kahl, 2024","code":""},{"path":"/reference/predict_species.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Predict Species Within an Audio File — predict_species","text":"Wood, C. M., & Kahl, S. (2024). Guidelines appropriate use BirdNET scores detector outputs. Journal Ornithology. https://doi.org/10.1007/s10336-024-02144-5","code":""},{"path":[]},{"path":"/reference/predict_species_at_location_and_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict species for a given location and time — predict_species_at_location_and_time","title":"Predict species for a given location and time — predict_species_at_location_and_time","text":"Uses BirdNET Species Range Model estimate presence bird species specified location time year.","code":""},{"path":"/reference/predict_species_at_location_and_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict species for a given location and time — predict_species_at_location_and_time","text":"","code":"predict_species_at_location_and_time(   model,   latitude,   longitude,   week = NULL,   min_confidence = 0.03 )"},{"path":"/reference/predict_species_at_location_and_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict species for a given location and time — predict_species_at_location_and_time","text":"model BirdNETModel. instance BirdNET model returned init_model(). latitude numeric. latitude location species prediction. Must interval [-90.0, 90.0]. longitude numeric. longitude location species prediction. Must interval [-180.0, 180.0]. week integer. week year predict species. Must interval [1, 48] specified. NULL, predictions limited specific week. min_confidence numeric. Minimum confidence threshold predictions considered valid. Must interval [0, 1.0).","code":""},{"path":"/reference/predict_species_at_location_and_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict species for a given location and time — predict_species_at_location_and_time","text":"data frame columns: label, confidence. row represents predicted species, confidence indicating likelihood species present specified location time.","code":""},{"path":"/reference/predict_species_at_location_and_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict species for a given location and time — predict_species_at_location_and_time","text":"BirdNET Species Range Model leverages eBird checklist frequency data estimate probability bird species occurrences based latitude, longitude, time year. integrates actual observations expert-curated data, making adaptable regions varying levels data availability. model employs circular embeddings classifier predict species presence migration patterns, achieving higher accuracy data-rich regions lower accuracy underrepresented areas like parts Africa Asia. details, can view full discussion : https://github.com/kahst/BirdNET-Analyzer/discussions/234","code":""},{"path":"/reference/predict_species_at_location_and_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict species for a given location and time — predict_species_at_location_and_time","text":"","code":"# Predict species in Chemnitz, Germany, that are present all year round model <- init_model(language = \"de\") predict_species_at_location_and_time(model, latitude = 50.8334, longitude = 12.9231) #>                                           label confidence #> 1                         Parus major_Kohlmeise 0.99645239 #> 2                           Turdus merula_Amsel 0.99553460 #> 3                  Anas platyrhynchos_Stockente 0.98629630 #> 4                  Columba palumbus_Ringeltaube 0.97970045 #> 5                 Cyanistes caeruleus_Blaumeise 0.97704250 #> 6                    Fringilla coelebs_Buchfink 0.97502279 #> 7                Erithacus rubecula_Rotkehlchen 0.95230711 #> 8            Sylvia atricapilla_Mönchsgrasmücke 0.94955504 #> 9               Phylloscopus collybita_Zilpzalp 0.94362831 #> 10                    Motacilla alba_Bachstelze 0.93249565 #> 11                Hirundo rustica_Rauchschwalbe 0.92767054 #> 12              Garrulus glandarius_Eichelhäher 0.92274117 #> 13                     Buteo buteo_Mäusebussard 0.91962087 #> 14                 Dendrocopos major_Buntspecht 0.91961437 #> 15                        Apus apus_Mauersegler 0.91489345 #> 16                        Sturnus vulgaris_Star 0.91195983 #> 17                             Pica pica_Elster 0.89453363 #> 18                Carduelis carduelis_Stieglitz 0.88957518 #> 19                     Ardea cinerea_Graureiher 0.88793421 #> 20                Emberiza citrinella_Goldammer 0.88048667 #> 21            Troglodytes troglodytes_Zaunkönig 0.87095416 #> 22                Turdus philomelos_Singdrossel 0.87011319 #> 23                       Sitta europaea_Kleiber 0.87003815 #> 24                     Chloris chloris_Grünfink 0.86355007 #> 25               Passer domesticus_Haussperling 0.86212170 #> 26                     Cygnus olor_Höckerschwan 0.85587966 #> 27                     Corvus corone_Rabenkrähe 0.85445541 #> 28                Delichon urbicum_Mehlschwalbe 0.83508080 #> 29                        Fulica atra_Blässhuhn 0.82934046 #> 30                     Picus viridis_Grünspecht 0.82888216 #> 31                  Falco tinnunculus_Turmfalke 0.82351327 #> 32              Turdus pilaris_Wacholderdrossel 0.82054323 #> 33                 Phalacrocorax carbo_Kormoran 0.81945527 #> 34          Phoenicurus ochruros_Hausrotschwanz 0.80881274 #> 35                 Passer montanus_Feldsperling 0.78537780 #> 36                         Anser anser_Graugans 0.78349972 #> 37          Chroicocephalus ridibundus_Lachmöwe 0.76751101 #> 38                   Aythya fuligula_Reiherente 0.75682569 #> 39             Podiceps cristatus_Haubentaucher 0.75553709 #> 40                   Alauda arvensis_Feldlerche 0.69698489 #> 41                    Spinus spinus_Erlenzeisig 0.69496942 #> 42            Streptopelia decaocto_Türkentaube 0.68757200 #> 43                    Columba livia_Felsentaube 0.68738079 #> 44                      Cuculus canorus_Kuckuck 0.67729229 #> 45                      Ardea alba_Silberreiher 0.65753788 #> 46                 Phylloscopus trochilus_Fitis 0.65112913 #> 47                        Anas crecca_Krickente 0.61713117 #> 48                    Lanius collurio_Neuntöter 0.61520779 #> 49                Mareca strepera_Schnatterente 0.61060512 #> 50                        Corvus corax_Kolkrabe 0.60739279 #> 51          Tachybaptus ruficollis_Zwergtaucher 0.60032487 #> 52                  Mergus merganser_Gänsesäger 0.59896916 #> 53               Emberiza schoeniclus_Rohrammer 0.58444989 #> 54     Coccothraustes coccothraustes_Kernbeißer 0.58386409 #> 55                 Poecile palustris_Sumpfmeise 0.58308756 #> 56      Acrocephalus scirpaceus_Teichrohrsänger 0.58198237 #> 57                      Aythya ferina_Tafelente 0.57819277 #> 58                       Milvus milvus_Rotmilan 0.57267773 #> 59               Curruca communis_Dorngrasmücke 0.56269276 #> 60           Regulus regulus_Wintergoldhähnchen 0.55604601 #> 61                     Pyrrhula pyrrhula_Gimpel 0.54912925 #> 62               Linaria cannabina_Bluthänfling 0.53836346 #> 63                        Corvus monedula_Dohle 0.53744876 #> 64             Luscinia megarhynchos_Nachtigall 0.53165764 #> 65                   Periparus ater_Tannenmeise 0.53161097 #> 66             Aegithalos caudatus_Schwanzmeise 0.53160346 #> 67                Phasianus colchicus_Jagdfasan 0.53132844 #> 68                      Serinus serinus_Girlitz 0.52792656 #> 69                    Vanellus vanellus_Kiebitz 0.52776206 #> 70              Turdus viscivorus_Misteldrossel 0.51759207 #> 71              Dryocopus martius_Schwarzspecht 0.49939877 #> 72                  Motacilla flava_Schafstelze 0.49885574 #> 73       Certhia brachydactyla_Gartenbaumläufer 0.49876487 #> 74                Gallinula chloropus_Teichhuhn 0.49523902 #> 75                       Alcedo atthis_Eisvogel 0.48993650 #> 76                   Ciconia ciconia_Weißstorch 0.48821187 #> 77                 Sylvia borin_Gartengrasmücke 0.47310179 #> 78             Curruca curruca_Klappergrasmücke 0.47287306 #> 79                        Oriolus oriolus_Pirol 0.47245672 #> 80                 Circus aeruginosus_Rohrweihe 0.47114873 #> 81           Actitis hypoleucos_Flussuferläufer 0.46899500 #> 82                  Corvus frugilegus_Saatkrähe 0.46493271 #> 83           Prunella modularis_Heckenbraunelle 0.46352315 #> 84                 Alopochen aegyptiaca_Nilgans 0.45838946 #> 85       Acrocephalus palustris_Sumpfrohrsänger 0.45668471 #> 86     Phoenicurus phoenicurus_Gartenrotschwanz 0.44974494 #> 87                  Spatula clypeata_Löffelente 0.44431674 #> 88                      Accipiter nisus_Sperber 0.44304466 #> 89                Bucephala clangula_Schellente 0.43756390 #> 90                            Grus grus_Kranich 0.43635592 #> 91            Tringa glareola_Bruchwasserläufer 0.43420565 #> 92            Lophophanes cristatus_Haubenmeise 0.42019022 #> 93                    Mareca penelope_Pfeifente 0.41281414 #> 94              Sterna hirundo_Flussseeschwalbe 0.40616271 #> 95                Gallinago gallinago_Bekassine 0.40309733 #> 96                  Milvus migrans_Schwarzmilan 0.39692584 #> 97  Acrocephalus arundinaceus_Drosselrohrsänger 0.39124268 #> 98            Fringilla montifringilla_Bergfink 0.39039764 #> 99              Muscicapa striata_Grauschnäpper 0.37686411 #> 100         Charadrius dubius_Flussregenpfeifer 0.37177074 #> 101             Motacilla cinerea_Gebirgsstelze 0.37119526 #> 102                Spatula querquedula_Knäkente 0.36937600 #> 103                Larus cachinnans_Steppenmöwe 0.36550432 #> 104               Anthus pratensis_Wiesenpieper 0.36459562 #> 105               Tringa nebularia_Grünschenkel 0.35800940 #> 106                Branta canadensis_Kanadagans 0.35513273 #> 107                Riparia riparia_Uferschwalbe 0.34158945 #> 108           Certhia familiaris_Waldbaumläufer 0.34057742 #> 109                 Calidris pugnax_Kampfläufer 0.33378395 #> 110                 Anthus trivialis_Baumpieper 0.32977489 #> 111                Poecile montanus_Weidenmeise 0.32193810 #> 112      Regulus ignicapilla_Sommergoldhähnchen 0.31415448 #> 113                   Anser albifrons_Blässgans 0.31123361 #> 114                     Columba oenas_Hohltaube 0.31031001 #> 115                   Turdus iliacus_Rotdrossel 0.30680388 #> 116                 Emberiza calandra_Grauammer 0.30615717 #> 117            Tringa ochropus_Waldwasserläufer 0.30092895 #> 118              Hippolais icterina_Gelbspötter 0.28836453 #> 119                       Larus canus_Sturmmöwe 0.28737485 #> 120                     Netta rufina_Kolbenente 0.28517705 #> 121                    Corvus cornix_Nebelkrähe 0.28454724 #> 122              Saxicola rubetra_Braunkehlchen 0.28386748 #> 123 Acrocephalus schoenobaenus_Schilfrohrsänger 0.28029752 #> 124      Loxia curvirostra_Fichtenkreuzschnabel 0.27461991 #> 125      Phylloscopus sibilatrix_Waldlaubsänger 0.26411819 #> 126          Ficedula hypoleuca_Trauerschnäpper 0.26059541 #> 127           Saxicola rubicola_Schwarzkehlchen 0.26029003 #> 128                Rallus aquaticus_Wasserralle 0.25950387 #> 129         Locustella luscinioides_Rohrschwirl 0.25636688 #> 130           Calidris alpina_Alpenstrandläufer 0.25567725 #> 131           Anser serrirostris_Tundrasaatgans 0.24914101 #> 132               Locustella naevia_Feldschwirl 0.24222459 #> 133               Haliaeetus albicilla_Seeadler 0.23829913 #> 134                        Anas acuta_Spießente 0.23819828 #> 135                 Dryobates minor_Kleinspecht 0.23068380 #> 136        Tringa erythropus_Dunkelwasserläufer 0.22931644 #> 137            Dendrocoptes medius_Mittelspecht 0.22652707 #> 138                Anthus spinoletta_Bergpieper 0.22452772 #> 139            Larus michahellis_Mittelmeermöwe 0.21748297 #> 140                    Falco subbuteo_Baumfalke 0.21098644 #> 141                  Accipiter gentilis_Habicht 0.20669085 #> 142                 Lullula arborea_Heidelerche 0.20550326 #> 143             Streptopelia turtur_Turteltaube 0.20004660 #> 144                 Cinclus cinclus_Wasseramsel 0.19380097 #> 145                 Numenius arquata_Brachvogel 0.19191389 #> 146                        Strix aluco_Waldkauz 0.18986404 #> 147                    Circus cyaneus_Kornweihe 0.18354732 #> 148            Oenanthe oenanthe_Steinschmätzer 0.18338126 #> 149                Pandion haliaetus_Fischadler 0.18336481 #> 150               Pernis apivorus_Wespenbussard 0.17668539 #> 151          Chlidonias niger_Trauerseeschwalbe 0.17596099 #> 152               Luscinia svecica_Blaukehlchen 0.17522924 #> 153                 Lanius excubitor_Raubwürger 0.16994186 #> 154     Podiceps nigricollis_Schwarzhalstaucher 0.16804053 #> 155                    Jynx torquilla_Wendehals 0.16763055 #> 156                   Tadorna tadorna_Brandgans 0.16476496 #> 157           Podiceps grisegena_Rothalstaucher 0.16474454 #> 158         Nucifraga caryocatactes_Tannenhäher 0.16452831 #> 159                  Tringa totanus_Rotschenkel 0.15846707 #> 160               Mergellus albellus_Zwergsäger 0.15125172 #> 161                      Picus canus_Grauspecht 0.15034559 #> 162                 Ciconia nigra_Schwarzstorch 0.14960133 #> 163       Charadrius hiaticula_Sandregenpfeifer 0.14472079 #> 164           Nycticorax nycticorax_Nachtreiher 0.13774449 #> 165                Falco peregrinus_Wanderfalke 0.13579598 #> 166               Botaurus stellaris_Rohrdommel 0.13425295 #> 167               Aix galericulata_Mandarinente 0.13419616 #> 168                Remiz pendulinus_Beutelmeise 0.12373128 #> 169                 Panurus biarmicus_Bartmeise 0.12137543 #> 170                   Coturnix coturnix_Wachtel 0.11635761 #> 171                       Perdix perdix_Rebhuhn 0.11422057 #> 172                Turdus torquatus_Ringdrossel 0.11380927 #> 173             Branta leucopsis_Weißwangengans 0.11346602 #> 174               Egretta garzetta_Seidenreiher 0.11295213 #> 175                       Upupa epops_Wiedehopf 0.10721239 #> 176                    Larus fuscus_Heringsmöwe 0.10558451 #> 177                  Limosa limosa_Uferschnepfe 0.10455787 #> 178        Pluvialis apricaria_Goldregenpfeifer 0.09768523 #> 179                      Aythya marila_Bergente 0.09661443 #> 180                 Buteo lagopus_Raufußbussard 0.09334701 #> 181           Calidris minuta_Zwergstrandläufer 0.09098604 #> 182                       Asio otus_Waldohreule 0.09062644 #> 183               Merops apiaster_Bienenfresser 0.09046380 #> 184                 Platalea leucorodia_Löffler 0.08989146 #> 185                 Circus pygargus_Wiesenweihe 0.08737607 #> 186                 Larus argentatus_Silbermöwe 0.08355612 #> 187    Pluvialis squatarola_Kiebitzregenpfeifer 0.08350678 #> 188             Scolopax rusticola_Waldschnepfe 0.08286890 #> 189               Podiceps auritus_Ohrentaucher 0.08090969 #> 190              Ixobrychus minutus_Zwergdommel 0.07995533 #> 191             Pyrrhocorax graculus_Alpendohle 0.07927271 #> 192                 Ardea purpurea_Purpurreiher 0.07800952 #> 193       Recurvirostra avosetta_Säbelschnäbler 0.07763951 #> 194      Calidris ferruginea_Sichelstrandläufer 0.07641439 #> 195  Ichthyaetus melanocephalus_Schwarzkopfmöwe 0.07582787 #> 196                 Gavia stellata_Sterntaucher 0.07385838 #> 197                    Melanitta fusca_Samtente 0.06954328 #> 198        Locustella fluviatilis_Schlagschwirl 0.06944773 #> 199           Numenius phaeopus_Regenbrachvogel 0.06751283 #> 200       Ptyonoprogne rupestris_Felsenschwalbe 0.06720366 #> 201              Hydrocoloeus minutus_Zwergmöwe 0.06686041 #> 202       Ficedula albicollis_Halsbandschnäpper 0.06679752 #> 203         Himantopus himantopus_Stelzenläufer 0.06530610 #> 204           Plectrophenax nivalis_Schneeammer 0.06238731 #> 205                Aquila chrysaetos_Steinadler 0.06201217 #> 206                     Athene noctua_Steinkauz 0.06179736 #> 207                 Gavia arctica_Prachttaucher 0.06144491 #> 208              Cygnus columbianus_Zwergschwan 0.06139188 #> 209                     Bubulcus ibis_Kuhreiher 0.06134326 #> 210             Porzana porzana_Tüpfelsumpfhuhn 0.06016217 #> 211              Galerida cristata_Haubenlerche 0.05939114 #> 212     Chlidonias hybrida_Weißbart-Seeschwalbe 0.05856375 #> 213                    Cygnus cygnus_Singschwan 0.05591480 #> 214         Sternula albifrons_Zwergseeschwalbe 0.05400210 #> 215                 Mergus serrator_Mittelsäger 0.05336181 #> 216                      Apus melba_Alpensegler 0.05325992 #> 217                    Falco columbarius_Merlin 0.05301178 #> 218                      Crex crex_Wachtelkönig 0.05109008 #> 219          Lymnocryptes minimus_Zwergschnepfe 0.05011262 #> 220            Curruca nisoria_Sperbergrasmücke 0.04815649 #> 221          Acanthis flammea_Taigabirkenzeisig 0.04760549 #> 222         Caprimulgus europaeus_Nachtschwalbe 0.04744333 #> 223                  Melanitta nigra_Trauerente 0.04599626 #> 224                 Clanga pomarina_Schreiadler 0.04582243 #> 225                      Aythya nyroca_Moorente 0.04459698 #> 226              Limosa lapponica_Pfuhlschnepfe 0.04398722 #> 227        Haematopus ostralegus_Austernfischer 0.04346076 #> 228                      Calidris canutus_Knutt 0.04323935 #> 229                  Emberiza hortulana_Ortolan 0.04299862 #> 230              Arenaria interpres_Steinwälzer 0.04243961 #> 231                  Asio flammeus_Sumpfohreule 0.04041028 #> 232               Anthus campestris_Brachpieper 0.03993680 #> 233             Cisticola juncidis_Zistensänger 0.03991739 #> 234          Acanthis cabaret_Alpenbirkenzeisig 0.03984652 #> 235            Prunella collaris_Alpenbraunelle 0.03751016 #> 236    Thalasseus sandvicensis_Brandseeschwalbe 0.03711388 #> 237         Glaucidium passerinum_Sperlingskauz 0.03687109 #> 238          Psittacula krameri_Halsbandsittich 0.03669582 #> 239           Bombycilla garrulus_Seidenschwanz 0.03285863 #> 240    Calidris temminckii_Temminckstrandläufer 0.03176918 #> 241          Carpodacus erythrinus_Karmingimpel 0.03075498 #> 242               Zapornia parva_Kleinsumpfhuhn 0.03056428"},{"path":"/reference/predictions_list_element_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a single prediction element to a data frame — predictions_list_element_to_df","title":"Convert a single prediction element to a data frame — predictions_list_element_to_df","text":"helper function takes single list element predictions list parses data frame format, extracting time interval, scientific name, common name, confidence level.","code":""},{"path":"/reference/predictions_list_element_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a single prediction element to a data frame — predictions_list_element_to_df","text":"","code":"predictions_list_element_to_df(x)"},{"path":"/reference/predictions_list_element_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a single prediction element to a data frame — predictions_list_element_to_df","text":"x single list element predictions list. expected named list one elements names represent labels \"scientificName_commonName\" values confidence scores.","code":""},{"path":"/reference/predictions_list_element_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a single prediction element to a data frame — predictions_list_element_to_df","text":"data frame columns: start, end, scientific_name, common_name, confidence.","code":""},{"path":"/reference/predictions_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of predictions from python to a data frame — predictions_to_df","title":"Convert a list of predictions from python to a data frame — predictions_to_df","text":"function processes list predictions python birdnet package, containing time intervals, scientific names, common names, confidence levels, converts structured data frame. handles cases elements list might empty.","code":""},{"path":"/reference/predictions_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of predictions from python to a data frame — predictions_to_df","text":"","code":"predictions_to_df(predictions, keep_empty = FALSE)"},{"path":"/reference/predictions_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of predictions from python to a data frame — predictions_to_df","text":"predictions list element expected named list. names elements represent time intervals format \"(start,end)\", element contains another list names form \"scientificName_commonName\" values confidence scores. keep_empty logical flag indicating whether include empty elements rows output data frame. TRUE, empty elements filled NA. FALSE, empty elements excluded.","code":""},{"path":"/reference/predictions_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of predictions from python to a data frame — predictions_to_df","text":"data frame columns: start, end, scientific_name, common_name, confidence. row represents single prediction.","code":""}]
